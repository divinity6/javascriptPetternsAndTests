/**
 *           ===== 함수형 상속 SOLID/DRY 요약표 =====
 *
 *     ----------------------------------------------------------------
 *
 *     - 원칙                   - 결과
 *
 *     - 단일책임                - 함수형 상속은 모듈 패턴을 사용하므로 의존성 주입과
 *                               애스팩트 장식에 친화적이다.
 *
 *                               상속한 모듈에는 반드시 한 가지 책임만 부여해야 한다
 *
 *     - 개방/폐쇄               - 함수형 상속은 모듈 확장에 관한 한 완벽한 메커니즘이다
 *                               ( 따라서 모듈을 수정하지 않아도 된다 )
 *
 *                               inheritFunctional01 이 구체적인 예시
 *
 *     - 리스코프 치환            - 함수형 상속은 수정 없이 모듈을 확장할 수 있게 해주므로
 *                               상속받은 모듈은 자신이 상속한 모듈로 대체될 수 있다
 *
 *     - 인터페이스 분리           - 다시 말하지만, 함수형 상속은 모듈 패턴의 변형이다.
 *                               응집된 모듈 API 자체가 분리된 인터페이스이다
 *
 *     - 의존성 역전              - 임의 모듈 생성 방식으로 맨든 모듈을 상속에 사용했다면
 *                               의존성은 쉽게 주입할 수 있다
 *
 *     - DRY( 반복하지 마라 )     - 설계만 잘한다면 모듈을 이용한 함수형 상속은 DRY 한
 *                               코드로 가는 지름길이다
 *
 *     ----------------------------------------------------------------
 *
 */
title( '' );
{
    debugger;
}